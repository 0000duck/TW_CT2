<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ParComprehensive</name>
    </assembly>
    <members>
        <member name="M:ParComprehensive.BaseParCell.ChangeClonePar(System.String,System.Int32)">
            <summary>
            改变拷贝后单元应有的参数
            </summary>
            <param name="nameCell">单元名称</param>
            <param name="pos">位置数</param>
        </member>
        <member name="M:ParComprehensive.ParDealCommunication.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            读取参数Xml
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.ParDealCommunication.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入Xml
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="T:ParComprehensive.BaseParComprehensive">
            <summary>
            替换Xml文件
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.RepalceXmlXDoc(System.String,BasicClass.StrAction)">
            <summary>
            从本地文档中读取参数Xml
            </summary>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.ChangeXmlToStrng(System.Xml.XmlDocument)">
            <summary>
            Xml转换为string
            </summary>
            <param name="xDoc"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.ReadXmlXDoc">
            <summary>
            从本地文档中读取参数Xml
            </summary>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.SetConfigPar">
            <summary>
            添加配置参数和轴位置
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.SetWorkFlowStop">
            <summary>
            设置流程结束
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.ReadAttributeCell(System.Xml.XmlElement,ParComprehensive.BaseParComprehensive)">
            <summary>
            读取基础的参数属性
            </summary>
            <param name="xeRoot"></param>
            <param name="baseParComprehensive"></param>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.ReadXmlParCell(ParComprehensive.BaseParComprehensive,System.Xml.XmlElement)">
            <summary>
            从根节点中，读取每个单元格的参数
            </summary>
            <param name="baseParComprehensive"></param>
            <param name="xeRoot"></param>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.ChangePathModel">
            <summary>
            新建型号的时候，更改模板路径
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.SetTypeCell(System.Int32)">
            <summary>
            按照拍照位置进行算法类型设置
            </summary>
            <param name="pos">拍照位置</param>
            <returns>结果</returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.SetTypeCell(System.Boolean)">
            <summary>
             设置每个单元格的算法
            </summary>
            <param name="blInitLoad">是否是从文件中加载，还是手动创建新的算法单元,true为手动加载</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.WriteXmlCellComprehensive(System.Xml.XmlElement,System.String)">
            <summary>
            写入电子表格的指定单元
            </summary>
            <param name="baseParComprehensive_L">所有单元格参数</param>
            <returns>根节点</returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.WriteXmlDoc">
            <summary>
            保存所有参数到本地
            </summary>
            <returns>保存结果</returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.WriteXmlAllComprehensive(System.Collections.Generic.List{ParComprehensive.BaseParComprehensive})">
            <summary>
            写入电子表格的单元
            </summary>
            <param name="baseParComprehensive_L">所有单元格参数</param>
            <returns>根节点</returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.SetAttributeCell(System.Xml.XmlElement,ParComprehensive.BaseParComprehensive)">
            <summary>
            设置单元格的属性参数
            </summary>
            <param name="xeRoot"></param>
            <param name="baseParComprehensive"></param>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.WriteBasicAttribute(System.Xml.XmlElement)">
            <summary>
            写入基础属性
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.WriteXmlParCell(ParComprehensive.BaseParComprehensive,System.Xml.XmlElement)">
            <summary>
            保存每个单元格的参数
            </summary>
            <param name="baseParComprehensive"></param>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="F:ParComprehensive.BaseParComprehensive.C_NumCell">
            <summary>
            处理单元的个数
            </summary>
        </member>
        <member name="P:ParComprehensive.BaseParComprehensive.Count">
            <summary>
            集合的总个数
            </summary>
        </member>
        <member name="P:ParComprehensive.BaseParComprehensive.Item(System.Int32)">
            <summary>
            索引器
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:ParComprehensive.BaseParComprehensive.BrCell">
            <summary>
            列表row颜色
            </summary>
        </member>
        <member name="P:ParComprehensive.BaseParComprehensive.Fw_Row">
            <summary>
            列表 Row FontWeight
            </summary>
        </member>
        <member name="P:ParComprehensive.BaseParComprehensive.FStyle_Row">
            <summary>
            格式
            </summary>
        </member>
        <member name="P:ParComprehensive.BaseParComprehensive.FS_Row">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.Del(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.CopyPaste(System.Int32,System.Int32)">
            <summary>
            复制粘贴单元算法和参数
            </summary>
            <param name="indexCopy"></param>
            <param name="indexPaste"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.CopyDealImageP">
            <summary>
            将旧文件拷贝到新文件
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellClass(System.String)">
            <summary>
            通过单元名称索引单元类20190331-zx
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParImageProcess(System.String)">
            <summary>
            索引图像处理算法类-图像处理20190331-zx
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParCalibrate(System.String)">
            <summary>
            索引图像处理算法类-校准20190331-zx
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParGrabImage(System.String)">
            <summary>
            索引图像处理算法类-拍照20190331-zx
            </summary>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetNameCellByType(System.String)">
            <summary>
            通过算法名称返回第一个单元格，没有对应单元格则返回“”20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetNameCellByType_First(System.String)">
            <summary>
            通过算法名称返回第一个单元格，没有对应单元格则返回“”20190410-zx
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetAllNameCellByType(System.String)">
            <summary>
            通过算法名称返回所有的位置单元格,没有对应单元格则返回“”20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetNameCellByType(System.String,System.Int32)">
            <summary>
            通过算法名称返回对应拍照位置单元格,没有对应单元格则返回“”20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <param name="pos">拍照位置</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetAllNameCellByType(System.String,System.Int32)">
            <summary>
            通过算法名称返回对应拍照位置的单元格,没有对应单元格则返回“”20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <param name="pos">拍照位置</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetAnnotationByType(System.String,System.Int32)">
            <summary>
            通过算法类型和拍照位置，返回注释20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <param name="pos">拍照位置</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetAnnotationByType(System.String)">
            <summary>
            通过算法类型返回第一个注释20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetAnnotationByType_First(System.String)">
            <summary>
            通过算法类型返回第一个注释20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParCalibByType(System.String,System.Int32)">
            <summary>
            通过算法名称返回对应拍照位置参数类-校准20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <param name="pos">拍照位置</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParCalibByType(System.String)">
            <summary>
            通过算法名称返回第一个算子参数类-校准20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParCalibByType_First(System.String)">
            <summary>
            通过算法名称返回第一个算子参数类-校准20190410-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParImageProcessByType(System.String,System.Int32)">
            <summary>
            通过算法名称返回对应拍照位置算子-图像处理20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <param name="pos">拍照位置</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParImageProcessByType(System.String)">
            <summary>
            通过算法名称返回第一个算子参数类-图像处理20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParImageProcessByTyp_First(System.String)">
            <summary>
            通过算法名称返回第一个算子参数类-图像处理20190410-zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParGrabImageByType(System.String,System.Int32)">
            <summary>
            通过算法名称返回对应拍照位置算子-图像采集20190331-zx
            </summary>
            <param name="type">算法类型</param>
            <param name="pos">拍照位置</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParGrabImageByType(System.String)">
            <summary>
            通过算法名称返回第一个算子类-图像采集
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.BaseParComprehensive.GetCellParGrabImageByType_First(System.String)">
            <summary>
            通过算法名称返回第一个算子类-图像采集20190410zx
            </summary>
            <param name="type">算法类型</param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.ParDealDisplay.CreateResultShape(System.String)">
            <summary>
            结果图形
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ParComprehensive.ParDealCalibrate.CreateCamCalib(System.String)">
            <summary>
            相机校准
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ParComprehensive.ParDealCalibrate.CalibRobot(System.String)">
            <summary>
            机器人校准
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ParComprehensive.ParDealCalibrate.CreateCoordMap(System.String)">
            <summary>
            坐标映射
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ParComprehensive.ParDealCalibrate.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入Xml
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.ParDealGrabImage.CreateGrab(System.String)">
            <summary>
            设置拍照
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ParComprehensive.ParDealImageProcess.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            读取参数Xml
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.ParDealImageProcess.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入Xml
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.ParDealImageProcess.ChangeClonePar(System.String,System.Int32)">
            <summary>
            改变拷贝后单元应有的参数
            </summary>
            <param name="nameCell">单元名称</param>
            <param name="pos">位置数</param>
        </member>
        <member name="T:ParComprehensive.ParComprehensive1">
            <summary>
            相机综合设置顶层类，相机1
            </summary>
        </member>
        <member name="M:ParComprehensive.ParComprehensive1.#ctor">
            <summary>
            构造函数，初始化
            </summary>
        </member>
        <member name="T:ParComprehensive.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:ParComprehensive.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:ParComprehensive.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="M:ParComprehensive.ParDealWorkFlow.Init(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            初始化参数
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="noCamera"></param>
            <param name="pos"></param>
            <param name="blInitLoad"></param>
            <returns></returns>
        </member>
        <member name="M:ParComprehensive.ParDealWorkFlow.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            读取参数Xml
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
    </members>
</doc>
