<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DealComprehensive</name>
    </assembly>
    <members>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshImage">
            <summary>
            刷新图像
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshCurrImage">
            <summary>
            刷新当前图片
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshImage(System.String)">
            <summary>
            刷新指定单元格的图像
            </summary>
            <param name="nameCell"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshImage(System.Int32)">
            <summary>
            刷新指定位置的图像
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshImage_MainShow(System.Int32)">
            <summary>
            刷新指定类的Hobject
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshImage_Select(System.Int32)">
            <summary>
            如果Main结果又图片，刷新这个
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshHobject">
            <summary>
            刷新region和xld显示
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshHobject(System.String)">
            <summary>
            不刷新Image,只刷新对象
            </summary>
            <param name="nameCell"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshHobject_MainShow(System.Int32)">
            <summary>
            刷新指定类的Hobject
            </summary>
            <param name="nameCell"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshShape">
            <summary>
            刷新形状
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshShape(System.String)">
            <summary>
            刷新指定单元格
            </summary>
            <param name="nameCell"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RefreshShape(System.Int32)">
            <summary>
            刷新指定位置
            </summary>
            <param name="nameCell"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.ClearHtResultObjectShape">
            <summary>
            清除哈希表中的halcon对象
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.InitCalibCamera(System.Int32)">
            <summary>
            相机校准
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.InitCalibAffine(System.Int32)">
            <summary>
            相机投影校准
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.InitCalibRotate(System.Int32)">
            <summary>
            将旋转中心保存在参数中的值，写入到结果类里面，20181110张鑫
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.InitCalibAxis(System.Int32)">
            <summary>
            将旋转中心保存在参数中的值，写入到结果类里面，20181110张鑫
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.Communication(ParComprehensive.BaseParComprehensive)">
            <summary>
            通过传递的相机UI进行图像抓取
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SetCommOut(ParComprehensive.ParDealCommunication)">
            <summary>
            根据单元类型，选择拍照参数设置，或者是控制光源
            </summary>
            <param name="baseUCCamera"></param>
            <param name="parDealGrabImage"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SetCommWritePLC(ParComprehensive.ParDealCommunication)">
            <summary>
            根据单元类型，选择拍照参数设置，或者是控制光源
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayResultInfo(System.Int32,BasicDisplay.BaseUCDisplay)">
            <summary>
            显示当前拍照位置的信息
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveAllImage">
            <summary>
            保存所有运行过的图像,按照默认的路径
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveOKImage">
            <summary>
            保存当前单元的OK图像
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveOKImageDefaultPath(BasicClass.ImageAll)">
            <summary>
            保存指定的图片到默认路径
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveOKImage(BasicComprehensive.CellReference,BasicComprehensive.HObjectReference,System.String)">
            <summary>
            保存指定的单元图像到指定的路径
            </summary>
            <param name="cellReference"></param>
            <param name="hObjectReference"></param>
            <param name="path"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveOKImage(System.String,System.String)">
            <summary>
            保存OK图像
            </summary>
            <param name="nameCell">传入的当前算子引用的拍照算子名称</param>
            <param name="path"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveNGImage">
            <summary>
            保存NG的图像
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveNGImageDefaultPath(BasicClass.ImageAll)">
            <summary>
            保存指定的图片到默认路径
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveNGImage(BasicComprehensive.CellReference,BasicComprehensive.HObjectReference,System.String)">
            <summary>
            保存指定单元NG图像到指定的路径
            </summary>
            <param name="nameCell">图像单元名称</param>
            <param name="path"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunGrayAnalyze(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            灰度分析
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunSharpness(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            清晰度
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealScaleShapeTMCrossLines(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            形状匹配T-M直线交点
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealNccTMCrossLines(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            灰度匹配T-M直线交点
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealMeasureSLine(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            直线测量
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealMeasureCircle(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            圆弧测量
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunPointHarris(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            灰度分析
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunPointCV(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            V角点
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DiaplayROI(System.Int32,BasicDisplay.BaseUCDisplay)">
            <summary>
            显示对应拍照位置的ROI
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.ShowROI(BasicComprehensive.ParCellExeReference,BasicDisplay.BaseUCDisplay)">
            <summary>
            显示指定算法单元的ROI到图形显示画面
            </summary>
            <param name="pos"></param>
            <param name="baseUCDisplay"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SelectImageShape(ParComprehensive.BaseParComprehensive)">
            <summary>
            
            </summary>
            <param name="baseParComprehensive"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayResultShape(System.Int32,BasicDisplay.BaseUCDisplay)">
            <summary>
            显示当前拍照位置的结果
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.GetParDisplayResultShape(ParComprehensive.BaseParComprehensive)">
            <summary>
            获取每个单元里面的显示结果类
            </summary>
            <param name="baseParComprehensive"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayImage(ParComprehensive.ParDealDisplay)">
            <summary>
            显示图像
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayCamera(DealDisplay.BaseParDisplay)">
            <summary>
            显示相机图像
            </summary>
            <param name="baseParDisplay"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayResultImage(DealDisplay.BaseParDisplay)">
            <summary>
            显示相机图像
            </summary>
            <param name="baseParDisplay"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.GrabImage(ParComprehensive.BaseParComprehensive)">
            <summary>
            通过传递的相机UI进行图像抓取
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SetGrabImage(ParComprehensive.ParDealGrabImage)">
            <summary>
            根据单元类型，选择拍照参数设置，或者是控制光源
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SetLight(ParComprehensive.ParDealGrabImage)">
            <summary>
            拍照设置
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.TakePhoto(ParComprehensive.ParDealGrabImage)">
            <summary>
            拍照设置
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DefaultDisplayImage(BasicDisplay.BaseUCDisplay)">
            <summary>
            如果没有图像显示源，则显示默认的采集图像
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunStraightLine(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            求取直线
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunCrossLines(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            求取直线交点
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunMStraightLine(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            求取直线
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunMCrossLines(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            求取直线交点
            </summary>
            <param name="parDealImageProcess"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.FunMCircle(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            求取直线
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SelectImageProcess(ParComprehensive.BaseParComprehensive)">
            <summary>
            选择图像处理算法大类
            </summary>
            <param name="baseParComprehensive"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.CountWinTemp(System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            统计窗体类型
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.CreateTemplate(System.String@)">
            <summary>
            创建模板ＩＤ
            </summary>
            <param name="cellError"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.CreateTemplate(System.String@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            重载，兼容老版本
            </summary>
            <param name="cellError"></param>
            <param name="numScale"></param>
            <param name="numNcc"></param>
            <param name="numScaleT"></param>
            <param name="numNccT"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.GetTemplateID(DealImageProcess.BaseParTemplate,System.Boolean@,System.Boolean@)">
            <summary>
            求取模板ID
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.TempScaledShape(DealImageProcess.BaseParTemplate)">
            <summary>
            形状匹配模板ID
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.TempNcc(DealImageProcess.BaseParTemplate)">
            <summary>
            灰度值匹配模板ID
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.ReadHTModelID(System.String)">
            <summary>
            读取模板ID
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealScaledShape(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            形状匹配
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealScaledShapeT(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            形状匹配T
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealNcc(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            灰度值匹配
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealNccT(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            灰度值匹配T
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePos(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable@)">
            <summary>
            算法单元处理方法以及结果输出，采用Camera窗体
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePos(Camera.BaseUCDisplayCamera,BasicDisplay.BaseUCDisplay,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable@)">
            <summary>
            传入Image窗体
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePosCell(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.String,System.Int32,System.Collections.Hashtable@)">
            <summary>
            求取特定单元格的结果
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePosCell(Camera.BaseUCDisplayCamera,BasicComprehensive.ParCellExeReference,System.Collections.Hashtable@)">
            <summary>
            按照条件分支的单元，进行处理
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePosCell_ForTestRun(Camera.BaseUCDisplayCamera,BasicComprehensive.ParCellExeReference,System.Collections.Hashtable@)">
            <summary>
            为测试运行进行关联算法时，添加的处理
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePosCell_ForTestRun(Camera.BaseUCDisplayCamera,BasicComprehensive.ParCellExeReference,System.Collections.Generic.List{BasicComprehensive.CellReference},System.Collections.Hashtable@)">
            <summary>
            执行关联算法单元，包含显示
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="parCellExecuteReference"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePosNoDisplay(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,BasicClass.Pos_enum,System.Collections.Hashtable@)">
            <summary>
            重载
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos_e"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePosNoDisplay(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable@)">
            <summary>
            
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayComprehensivePos(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable)">
            <summary>
            传入结果，显示所有
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayComprehensivePos_MainShow(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Boolean,System.Collections.Hashtable)">
            <summary>
            显示图像
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos"></param>
            <param name="blShowMainImage"></param>
            <param name="htResult"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayComprehensivePos(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,BasicClass.Pos_enum,System.Collections.Hashtable,System.Boolean)">
            <summary>
            传入结果，显示所有
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos_e"></param>
            <param name="htResult"></param>
            <param name="blResult"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayComprehensivePos(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,BasicClass.Pos_enum,System.Collections.Hashtable,System.Boolean,System.Boolean)">
            <summary>
            是否刷新Main里面的图像
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos_e"></param>
            <param name="htResult"></param>
            <param name="blResult"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayComprehensivePos(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable,System.Boolean)">
            <summary>
            传入结果，显示所有
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos"></param>
            <param name="htResult"></param>
            <param name="blResult"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayComprehensivePos(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable,System.Boolean,System.Boolean)">
            <summary>
            传入结果，显示所有,选择是否显示Main里面传入的图像
            </summary>
            <param name="baseUCDisplayCamera"></param>
            <param name="htUCDisplay"></param>
            <param name="pos"></param>
            <param name="htResult"></param>
            <param name="blResult"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePos(Camera.BaseUCDisplayCamera,System.Int32)">
            <summary>
            单独执行拍照的算法
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePos_NoPhoto(Camera.BaseUCDisplayCamera,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable@)">
            <summary>
            执行没有拍照的算法
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.ClearResultDoneNew(System.Int32)">
            <summary>
            清除上次执行的记录，只记录当次的执行
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePos(System.Int32)">
            <summary>
            执行算法
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealComprehensivePos(System.Int32,System.String)">
            <summary>
            执行算法中的特定单元
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RecordTimeImageP(System.Collections.Hashtable,System.Int32,System.Double)">
            <summary>
            记录图像处理时间
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.RecordTimeDisplay(System.Collections.Hashtable,System.Int32,System.Double,System.String)">
            <summary>
            记录显示时间
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SelectAlgorithm(ParComprehensive.BaseParComprehensive)">
            <summary>
            根据每个单元的设置，选择算法
            </summary>
            <param name="baseParComprehensive"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.AddConfigParAndAxisResult">
            <summary>
            添加配置参数以及轴坐标
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.CalTime(BasicDisplay.BaseUCDisplay,System.Int64)">
            <summary>
            计算算法时间，剔除相机延迟的时间
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisplayResultShape(ParComprehensive.ParDealDisplay)">
            <summary>
            显示形状
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.ShowResultShape(DealDisplay.BaseParDisplay)">
            <summary>
            显示结果图形,按照设定的算法单元
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SaveImage(ParComprehensive.ParDealImageProcess,System.Collections.Hashtable)">
            <summary>
            保存图像
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.AddResult(System.String,DealResult.BaseResult)">
            <summary>
            在结果哈希表中添加新的结果，并释放以及移除旧的结果
            </summary>
            <param name="nameCell"></param>
            <param name="resultBase"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DisposeResult(System.String)">
            <summary>
            释放指定的单元
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.GetHtImage(BasicComprehensive.CellReference,BasicComprehensive.HObjectReference)">
            <summary>
            从哈希表中获取图像
            </summary>
            <param name="cellReference"></param>
            <param name="hObjectReference"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.GetHtOriginalImage">
            <summary>
            获取相机采集的原始图像
            </summary>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.WorkFlow(ParComprehensive.BaseParComprehensive)">
            <summary>
            通过传递的相机UI进行图像抓取
            </summary>
            <param name="baseParComprehensive"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.ClearNum_CycLogicBranch">
            <summary>
            清空同一流程中分支控制执行的次数
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.WorkFlowSetting(ParComprehensive.ParDealWorkFlow,System.String)">
            <summary>
            设置运行过程中的报警图像保存等
            </summary>
            <param name="parDealWorkFlow"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.LogicBranch(ParComprehensive.ParDealWorkFlow)">
            <summary>
            条件分支
            </summary>
            <param name="parDealWorkFlow"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.LogicBranch_DealComprehensive(BasicComprehensive.ParCellExeReference)">
            <summary>
            按照条件分支的单元，进行处理
            </summary>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.WorkSetting(ParComprehensive.ParDealWorkFlow)">
            <summary>
            设置运行过程中的报警图像保存等
            </summary>
            <param name="parDealWorkFlow"></param>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.DealWorkSetting(System.Boolean,System.Int32)">
            <summary>
            处理运行设置
            </summary>
            <param name="blResult"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:DealComprehensive.BaseDealComprehensive.SelectConfigFile(ParComprehensive.BaseParComprehensive)">
            <summary>
            选择配置文件算法
            </summary>
            <param name="baseParComprehensive"></param>
        </member>
    </members>
</doc>
