<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DealInOutput</name>
    </assembly>
    <members>
        <member name="T:DealInOutput.UCOutput">
            <summary>
            UCOutImageProcess.xaml 的交互逻辑
            </summary>
            <summary>
            UCOutput
            </summary>
        </member>
        <member name="M:DealInOutput.UCOutput.rdoComprehensive_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            综合判定
            </summary>
        </member>
        <member name="M:DealInOutput.UCOutput.rdoDefault_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            系统默认
            </summary>
        </member>
        <member name="M:DealInOutput.UCOutput.cboComResult_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            通用结果
            </summary>
        </member>
        <member name="M:DealInOutput.UCOutput.InitComResult">
            <summary>
            通用结果
            </summary>
        </member>
        <member name="M:DealInOutput.UCOutput.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.LoadXmlStream(System.String)">
            <summary>
            加载资源中Xml文档
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.LoadXmlStream(System.String,System.String)">
            <summary>
            加载本地或者资源中的xml
            </summary>
            <param name="Path"></param>
            <param name="PathStream"></param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.ChangeClonePar(System.String,System.Int32)">
            <summary>
            改变拷贝后单元应有的参数
            </summary>
            <param name="nameCell">单元名称</param>
            <param name="pos">位置数</param>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.ReadXmlChildInit(System.Xml.XmlElement)">
            <summary>
            初始化读取参数，和ReadXmlChild方法相比，只是不读取基础属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.ReadXmlChild(System.Xml.XmlElement)">
            <summary>
            读取子元素的参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.ReadBasicAttribute(System.Xml.XmlElement)">
            <summary>
            读取基础属性
            </summary>
            <param name="xeRoot">根节点</param>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.ReadBasicPar(System.Xml.XmlElement)">
            <summary>
            读取基础参数
            </summary>
            <param name="xeRoot">根节点</param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.WriteXmlRoot">
            <summary>
            写入参数并获取参数的根节点，直接从资源里面读取，确保参数所有的节点都被读取到
            </summary>
            <returns>根节点</returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.WriteBasicAttribute(System.Xml.XmlElement)">
            <summary>
            写入基础属性
            </summary>
            <param name="xeRoot">跟节点</param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.WriteBasicPar(System.Xml.XmlElement)">
            <summary>
            写入基础参数
            </summary>
            <param name="xeRoot">根节点</param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.BaseParInOutput.WriteXmlDefault">
            <summary>
            Strange读取完整节点并保存到默认值文件
            </summary>
            <returns>根节点</returns>
        </member>
        <member name="M:DealInOutput.ParInput.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            从本地文档里面读取参数的时候调用
            </summary>
            <param name="xeRoot">图像处理的根节点</param>
            <returns>是否成功读取</returns>
        </member>
        <member name="M:DealInOutput.ParInput.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealInOutput.ParInput.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入根节点参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.ParOutput.ReadXmlRootInit(System.Xml.XmlElement)">
            <summary>
            从本地文档里面读取参数的时候调用
            </summary>
            <param name="xeRoot">图像处理的根节点</param>
            <returns>是否成功读取</returns>
        </member>
        <member name="M:DealInOutput.ParOutput.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealInOutput.ParOutput.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入根节点参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="T:DealInOutput.UCSetResultValueCom">
            <summary>
            UCSetResultValueCom.xaml 的交互逻辑
            </summary>
            <summary>
            UCSetResultValueCom
            </summary>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.SetCellData(System.Collections.Generic.List{BasicComprehensive.CellReference},System.String)">
            <summary>
            获取当前单元格的结果
            </summary>
            <param name="cellData_L"></param>
            <param name="nameCell"></param>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.btnSetCal_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            测试计算
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.winCalculator_ParCalculate_event(DealMath.ParCalculate)">
            <summary>
            显示表达式事件响应
            </summary>
            <param name="parCalculate"></param>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.ConvertHtResultToDg">
            <summary>
            将哈希表结果中的数值提取并显示
            </summary>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.btnTestRun_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            测试运行
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.btnSave_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            保存设置
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.RefreshDgResultValue">
            <summary>
            刷新Datagrid显示
            </summary>
        </member>
        <member name="M:DealInOutput.UCSetResultValueCom.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:DealInOutput.FunOutput.DealInOutput(DealInOutput.ParOutput,System.Collections.Hashtable)">
            <summary>
            根据设置的表达式，以及算法的结果，对输出进行设置
            </summary>
            <param name="par"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="T:DealInOutput.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:DealInOutput.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:DealInOutput.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="M:DealInOutput.FunSetResultValueCom.DealResultValueCom(DealInOutput.ParSetResultValueCom,System.Collections.Hashtable)">
            <summary>
            计算通用结果
            </summary>
            <param name="par"></param>
            <param name="htResult"></param>
            <returns></returns>
        </member>
        <member name="M:DealInOutput.ParSetResultValueCom.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            从本地文档读取参数的时候，读取
            </summary>
            <param name="xeRoot">根节点</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:DealInOutput.ParSetResultValueCom.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealInOutput.ParSetResultValueCom.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            从Stream资源读取完整节点后，写入参数
            </summary>
        </member>
        <member name="M:DealInOutput.ParSetResultValueCom.WriteXmlPar(System.Xml.XmlElement)">
            <summary>
            该算法参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="T:DealInOutput.UCSetInput">
            <summary>
            UCSetInput.xaml 的交互逻辑
            </summary>
            <summary>
            UCSetInput
            </summary>
        </member>
        <member name="M:DealInOutput.UCSetInput.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
