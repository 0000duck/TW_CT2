<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DealWorkFlow</name>
    </assembly>
    <members>
        <member name="T:DealWorkFlow.WinLogicBranch">
            <summary>
            WinLogicBranch.xaml 的交互逻辑
            </summary>
            <summary>
            WinLogicBranch
            </summary>
        </member>
        <member name="M:DealWorkFlow.WinLogicBranch.btnClose_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            退出窗体,恢复备份参数
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.WinLogicBranch.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.ReadXmlChildInit(System.Xml.XmlElement)">
            <summary>
            初始化读取参数，和ReadXmlChild方法相比，只是不读取基础属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.ReadXmlChild(System.Xml.XmlElement)">
            <summary>
            读取子元素的参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.ReadBasicAttribute(System.Xml.XmlElement)">
            <summary>
            读取基础属性
            </summary>
            <param name="xeRoot"></param>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.ReadBasicPar(System.Xml.XmlElement)">
            <summary>
            读取基础参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.WriteXmlDefault">
            <summary>
            将参数保存到默认值
            </summary>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.WriteXmlRoot">
            <summary>
            写入参数并获取参数的根节点
            </summary>
            <returns>根节点</returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.WriteXmlChild(System.Xml.XmlElement)">
            <summary>
            在根节点中，写入参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.WriteBasicAttribute(System.Xml.XmlElement)">
            <summary>
            写入基础属性
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.BaseParWorkFlow.LoadXmlStream(System.String)">
            <summary>
            从指定的资源路径读取参数
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.ParExecuteCell.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            从本地文档读取参数的时候，读取
            </summary>
            <param name="xeRoot">根节点</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParExecuteCell.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParExecuteCell.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入参数到xml节点
            </summary>
            <param name="xDoc"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.ParExecuteCell.WriteXmlPar(System.Xml.XmlElement)">
            <summary>
            该算法参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="T:DealWorkFlow.TypeWorkFlow">
            <summary>
            TypeWorkFlow.xaml 的交互逻辑
            </summary>
            <summary>
            TypeWorkFlow
            </summary>
        </member>
        <member name="M:DealWorkFlow.TypeWorkFlow.tvTypeWorkFlow_SelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            选择类型
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.TypeWorkFlow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DealWorkFlow.UCCondition">
            <summary>
            UCCondition.xaml 的交互逻辑
            </summary>
            <summary>
            UCCondition
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCCondition.cboCondition_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            判断条件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.UCCondition.btnSetA_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            表达式A
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.UCCondition.winCalculator_SavePar_event(System.String,System.String)">
            <summary>
             保存参数,这里不需要
            </summary>
            <param name="str1"></param>
            <param name="str2"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.UCCondition.btnTest_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            运行，判断调试是否满足
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.UCCondition.Save">
            <summary>
            保存参数
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCCondition.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DealWorkFlow.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:DealWorkFlow.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:DealWorkFlow.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="M:DealWorkFlow.ParWorkSetting.ReadXmlRoot(System.Xml.XmlDocument)">
            <summary>
            设置算法的时候从本地资源初始化读取
            </summary>
            <param name="xDoc"></param>
            <returns></returns>   
        </member>
        <member name="M:DealWorkFlow.ParWorkSetting.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            从本地文档读取参数的时候，读取
            </summary>
            <param name="xeRoot">根节点</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParWorkSetting.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParWorkSetting.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入参数到xml节点
            </summary>
            <param name="xDoc"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.ParWorkSetting.WriteXmlPar(System.Xml.XmlElement)">
            <summary>
            该算法参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="T:DealWorkFlow.UCLogicBranch">
            <summary>
            UCLogicBranch.xaml 的交互逻辑
            </summary>
            <summary>
            UCLogicBranch
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCLogicBranch.Save">
            <summary>
            保存参数
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCLogicBranch.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DealWorkFlow.UCExecuteCell">
            <summary>
            UCExecuteCell.xaml 的交互逻辑
            </summary>
            <summary>
            UCExecuteCell
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCExecuteCell.dudNumCyc_ValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            重复次数
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.UCExecuteCell.Save">
            <summary>
            保存参数
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCExecuteCell.ShowCellExcute">
            <summary>
            显示可执行单元
            </summary>
        </member>
        <member name="M:DealWorkFlow.UCExecuteCell.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:DealWorkFlow.ParCondition.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            从本地文档读取参数的时候，读取
            </summary>
            <param name="xeRoot">根节点</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParCondition.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParCondition.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入参数到xml节点
            </summary>
        </member>
        <member name="M:DealWorkFlow.ParCondition.WriteXmlPar(System.Xml.XmlElement)">
            <summary>
            该算法参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.ParLogicBranch.ReadXmlRoot(System.Xml.XmlDocument)">
            <summary>
            设置算法的时候从本地资源初始化读取
            </summary>
            <param name="xDoc"></param>
            <returns></returns>   
        </member>
        <member name="M:DealWorkFlow.ParLogicBranch.ReadXmlRoot(System.Xml.XmlElement)">
            <summary>
            从本地文档读取参数的时候，读取
            </summary>
            <param name="xeRoot">根节点</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParLogicBranch.ReadXmlPar(System.Xml.XmlElement)">
            <summary>
            读取算法参数
            </summary>
            <param name="xeRoot">算法参数根节点</param>
            <returns>成功</returns>
        </member>
        <member name="M:DealWorkFlow.ParLogicBranch.WriteXmlRoot(System.Xml.XmlElement)">
            <summary>
            写入参数到xml节点
            </summary>
            <param name="xDoc"></param>
            <returns></returns>
        </member>
        <member name="M:DealWorkFlow.ParLogicBranch.WriteXmlPar(System.Xml.XmlElement)">
            <summary>
            该算法参数
            </summary>
            <param name="xeRoot"></param>
            <returns></returns>
        </member>
        <member name="T:DealWorkFlow.WinWorkSetting">
            <summary>
            WinWorkSetting.xaml 的交互逻辑
            </summary>
            <summary>
            WinWorkSetting
            </summary>
        </member>
        <member name="M:DealWorkFlow.WinWorkSetting.chkSaveOK_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            保存OK图片
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DealWorkFlow.WinWorkSetting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
